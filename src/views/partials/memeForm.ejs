<!-- The Modal -->
<div id="memeFormModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeMemeFormModal()">&times;</span>

        <form id="memeForm">
            <label for="url">URL:</label>
            <input type="text" id="url" name="url" class="meme-input" required>

            <label for="description">Description:</label>
            <input type="text" id="description" name="description" class="meme-input" required>

            <label for="tags">Tags:</label>
            <input type="text" id="tags" name="tags" class="meme-input" placeholder="Enter tags separated by commas">

            <button type="button" onclick="submitMeme()" class="meme-button">Submit</button>
        </form>
    </div>
</div>

<style>
    #memeFormModal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.7);
    }

    .modal-content {
        background-color: #333;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #555;
        width: 80%;
        max-width: 400px;
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: #fff;
        /* Dark mode text color */
        text-decoration: none;
        cursor: pointer;
    }

    form {
        display: flex;
        flex-direction: column;
    }

    label {
        margin-top: 10px;
        color: #fff;
        /* Dark mode text color */
    }

    .meme-input {
        margin-bottom: 10px;
        padding: 8px;
        background-color: #555;
        /* Dark mode input background color */
        color: #fff;
        /* Dark mode text color */
        border: 1px solid #777;
        /* Dark mode input border color */
    }

    /* Additional styles for the plus icon button */
    .add-meme-button {
        background-color: #870289;
        color: white;
        border: none;
        border-radius: 50%;
        padding: 7px 10px;
        font-size: 20px;
        cursor: pointer;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
        transition: background-color 0.3s ease;
    }

    .add-meme-button:hover {
        background-color: #45a049;
    }
</style>

<script>
    function openMemeFormModal() {
        const modal = document.getElementById('memeFormModal');
        modal.style.display = 'block';
    }

    function closeMemeFormModal() {
        const modal = document.getElementById('memeFormModal');
        modal.style.display = 'none';
    }

    function submitMeme() {
        const url = document.getElementById('url').value;
        const description = document.getElementById('description').value;
        const tags = document.getElementById('tags').value.split(',').map(tag => tag.trim());

        const memeData = { url, description, tags };

        console.log(JSON.stringify(memeData));

        // Retrieve token from storage
        const token = localStorage.getItem('userToken');

        // Add code to make a POST request with memeData to /memes endpoint
        // Example using fetch:
        fetch('/memes', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify(memeData)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to submit meme');
                }
                return response.json();
            })
            .then(data => {
                console.log('Meme submitted successfully:', data);
                closeMemeFormModal(); // Close the modal after successful submission
                // Add any further actions you want to perform after successful submission
            })
            .catch(error => {
                console.error('Error submitting meme:', error);
            });
    }
</script>